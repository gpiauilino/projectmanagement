package gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.ModelTable;
import modelo.ProjetoModel;

public final class ProjetoGUI extends javax.swing.JFrame {

    ProjetoModel projeto_selecionado_atual;

    public ProjetoGUI() {

        initComponents();

        // Impede que a janela seja redimencionada 
        // this.setResizable(false);
        // Trocando cursor para HAND CURSOR(Maozinha)
        // jButtonRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        // Variavel con recebendo a conexao
    }

    // Metodo que faz uma instrucao Query(select)
    // para jogar na JTable atraves do modelo de tabela (ModelTabel.java)
    public void carregarTable(ProjetoModel objProjeto) {

        ArrayList lista_de_projetos;

        // se o objPRojeto chegou como 'null' entao eh pra Selecionar todos
        if (objProjeto == null) {
            //
            objProjeto = new ProjetoModel();
            lista_de_projetos = Utilitarios.projDAO.listarTodos();

        } else {
            // senao chama o projDao.buscar passando um obj prpjeto que 'deverá' 
            //conter descricao ou nome preenchido
            lista_de_projetos = Utilitarios.projDAO.buscar(objProjeto);
        }

        String[] nome_colunas = objProjeto.getColunas();

        // cria um ModelTable passando a lista de obs projetos e o nome das colunas
        ModelTable modelo = new ModelTable(lista_de_projetos, nome_colunas);

        // defini a jtable com esse modelo jah preenchido com lista de projetos 
        // e colunas na mesma sequencia que a lista
        tbListagemProjeto.setModel(modelo);

        // para ajustar os tamanhos de largura das colunas
        tbListagemProjeto.getColumnModel().getColumn(0).setPreferredWidth(80);
        tbListagemProjeto.getColumnModel().getColumn(0).setResizable(false);
        tbListagemProjeto.getColumnModel().getColumn(1).setPreferredWidth(120);
        tbListagemProjeto.getColumnModel().getColumn(1).setResizable(false);
        tbListagemProjeto.getColumnModel().getColumn(2).setPreferredWidth(250);
        tbListagemProjeto.getColumnModel().getColumn(2).setResizable(false);
        tbListagemProjeto.getTableHeader().setReorderingAllowed(false);
        //  tbListagemProjeto.setAutoResizeMode(tbListagemProjeto.AUTO_RESIZE_ALL_COLUMNS);
        // tbListagemProjeto.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    // Metodo responsavel por selecionar um registro ao clicar ou seguir com as setas do teclado
    // na JTable, e realizar a vinculacao do mesmo nos TextFields
    public void linhaTableSelecionado() {

        //TODO tinha q ver uma maneira de pegar esses valores
        labelID.setText(tbListagemProjeto.getValueAt(tbListagemProjeto.getSelectedRow(), 0).toString());

        //Object objNome = tbListagemProjeto.getValueAt(tbListagemProjeto.getSelectedRow(), 1);
        txtNome.setText(tbListagemProjeto.getValueAt(tbListagemProjeto.getSelectedRow(), 1).toString());
        txtDescricao.setText(tbListagemProjeto.getValueAt(tbListagemProjeto.getSelectedRow(), 2).toString());
        LabelNomeAutor.setText(tbListagemProjeto.getValueAt(tbListagemProjeto.getSelectedRow(), 6).toString());

        btnDeletar.setEnabled(true);
        btnAddRequisito1.setEnabled(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tbnLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListagemProjeto = new javax.swing.JTable();
        labelID = new javax.swing.JLabel();
        btnDeletar = new javax.swing.JButton();
        LabelAuthor = new javax.swing.JLabel();
        LabelNomeAutor = new javax.swing.JLabel();
        btnAddRequisito1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Projetos");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Projetos");

        tbnLimpar.setText("Limpar");
        tbnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnLimparActionPerformed(evt);
            }
        });

        tbListagemProjeto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListagemProjeto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListagemProjetoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListagemProjeto);

        labelID.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        labelID.setText("ID 9999");
        labelID.setEnabled(false);

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        LabelAuthor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LabelAuthor.setText("Autor");

        LabelNomeAutor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LabelNomeAutor.setForeground(new java.awt.Color(102, 102, 255));
        LabelNomeAutor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LabelNomeAutor.setText("Gabriel Almeida");

        btnAddRequisito1.setText("Requisitos");
        btnAddRequisito1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRequisito1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2)
                        .add(134, 134, 134)
                        .add(jLabel3)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(txtNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtDescricao)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnBuscar)
                        .add(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtDescricao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnBuscar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(labelID))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btnDeletar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAddRequisito1))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(tbnLimpar)
                        .add(206, 206, 206)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(LabelAuthor)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(LabelNomeAutor, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(labelID))
                .add(1, 1, 1)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(LabelAuthor)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(LabelNomeAutor))
                    .add(tbnLimpar))
                .add(92, 92, 92)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnAddRequisito1)
                    .add(btnDeletar))
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnLimparActionPerformed

        limparTela();

        carregarTable(null);

    }//GEN-LAST:event_tbnLimparActionPerformed

    private void tbListagemProjetoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListagemProjetoMouseClicked

        linhaTableSelecionado();

    }//GEN-LAST:event_tbListagemProjetoMouseClicked

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed

        ProjetoModel objProjeto = new ProjetoModel(Long.parseLong(labelID.getText()));

        // somente pode deletar se houver um ID no campo labelID
        if ((labelID.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Selecione um Projeto para deletar");
        } else {
            //usa o utilizarios.projDAO.deletar para deletar um projeto
            Utilitarios.projDAO.deletar(objProjeto);

            //TODO, podia testar se realemnte deletou de alguma maneira verificando o retorno do ResultSet
            JOptionPane.showMessageDialog(null, "Projeto removido com Sucesso!");
        }

        carregarTable(null);

        // apaga os dados preenchidos nos campos de texto
        limparTela();
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        ProjetoModel objProjeto = new ProjetoModel();
        objProjeto.setNome(txtNome.getText());
        objProjeto.setDescricao(txtDescricao.getText());

        // havendo nome ou descricao preechidos, altera 'buscar' para True 
        if ((!txtNome.getText().isEmpty()) || (!txtDescricao.getText().isEmpty())) {

            carregarTable(objProjeto);

        } else {

            carregarTable(null);
        }

        // apaga os dados preenchidos nos campos de texto
        limparTela();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        carregarTable(null);

    }//GEN-LAST:event_formComponentShown

    private void btnAddRequisito1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRequisito1ActionPerformed

        new RequisitoGUI(Long.parseLong(labelID.getText()), txtNome.getText()).setVisible(true);

    }//GEN-LAST:event_btnAddRequisito1ActionPerformed

    public void limparTela() {
        labelID.setText("0");
        txtNome.setText("");
        txtDescricao.setText("");
        LabelNomeAutor.setText("");
        btnDeletar.setEnabled(false);
        btnAddRequisito1.setEnabled(false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelAuthor;
    private javax.swing.JLabel LabelNomeAutor;
    private javax.swing.JButton btnAddRequisito1;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelID;
    private javax.swing.JTable tbListagemProjeto;
    private javax.swing.JButton tbnLimpar;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
